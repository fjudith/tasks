# https://taskfile.dev

version: 3

env:
  CLUSTER_NAME: default
  # KUBECONFIG: ~/.kube/config
  ISTIO_WORKDIR: /tmp
  ISTIO_VERSION: 1.26.2
  ISTIO_NAMESPACE: istio-system
  ISTIO_ROOTCA_DAYS: 3650
  ISTIO_ROOTCA_KEYSZ: 4096
  ISTIO_ROOTCA_ORG: Istio
  ISTIO_ROOTCA_CN: Root CA
  ISTIO_INTERMEDIATE_DAYS: 3650
  ISTIO_INTERMEDIATE_KEYSZ: 4096
  ISTIO_INTERMEDIATE_ORG: Istio
  ISTIO_INTERMEDIATE_CN: Intermediate CA
  ISTIO_INTERMEDIATE_SAN_DNS: istiod.istio-system.svc
  ISTIO_WORKLOAD_DAYS: 1
  ISTIO_SERVICE_ACCOUNT: default
  ISTIO_WORKLOAD_CN: Workload

tasks:
  root-ca-cert:
    desc: Generate root CA for Istio
    dir: "{{.ISTIO_WORKDIR}}"
    cmds:
      - cmd: |
          cat <<EOF > root-ca.conf
          [ req ]
          encrypt_key = no
          prompt = no
          utf8 = yes
          default_md = sha256
          default_bits = {{.ISTIO_ROOTCA_KEYSZ}}
          req_extensions = req_ext
          x509_extensions = req_ext
          distinguished_name = req_dn

          [ req_ext ]
          subjectKeyIdentifier = hash
          basicConstraints = critical, CA:true
          keyUsage = critical, digitalSignature, nonRepudiation, keyEncipherment, keyCertSign

          [ req_dn ]
          O = {{.ISTIO_ROOTCA_ORG}}
          CN = {{.ISTIO_ROOTCA_CN}}
          EOF
      - cmd: |
          openssl genrsa -out root-key.pem 4096
      - cmd: |
          openssl req -sha256 -new \
          -key root-key.pem \
          -config root-ca.conf -out root-cert.csr
      - cmd: |
          openssl x509 -req -sha256 \
          -days {{.ISTIO_ROOTCA_DAYS}} \
          -signkey root-key.pem \
          -extensions req_ext \
          -extfile root-ca.conf \
          -in root-cert.csr \
          -out root-cert.pem

  intermediate-ca-cert:
    desc: Generate intermediate CA for Istio
    dir: "{{.ISTIO_WORKDIR}}"
    cmds:
      - cmd: mkdir -p {{.CLUSTER_NAME}}
      - cmd: |
          cat <<EOF > {{.CLUSTER_NAME}}/intermediate.conf
          [ req ]
          encrypt_key = no
          prompt = no
          utf8 = yes
          default_md = sha256
          default_bits = {{.ISTIO_INTERMEDIATE_KEYSZ}}
          req_extensions = req_ext
          x509_extensions = req_ext
          distinguished_name = req_dn

          [ req_ext ]
          subjectKeyIdentifier = hash
          basicConstraints = critical, CA:true, pathlen:0
          keyUsage = critical, digitalSignature, nonRepudiation, keyEncipherment, keyCertSign
          subjectAltName=@san

          [ san ]
          DNS.1 = {{.ISTIO_INTERMEDIATE_SAN_DNS}}

          [ req_dn ]
          O = {{.ISTIO_INTERMEDIATE_ORG}}
          CN = {{.ISTIO_INTERMEDIATE_CN}}
          L = {{.CLUSTER_NAME}}
          EOF
      - cmd: mkdir -p {{.CLUSTER_NAME}}
      - cmd: |
          openssl genrsa -out {{.CLUSTER_NAME}}/ca-key.pem 4096
      - cmd: |
          openssl req -sha256 -new \
          -key {{.CLUSTER_NAME}}/ca-key.pem \
          -config {{.CLUSTER_NAME}}/intermediate.conf \
          -out {{.CLUSTER_NAME}}/cluster-ca.csr
      - cmd: |
          openssl x509 -req -sha256 \
          -days {{.ISTIO_INTERMEDIATE_DAYS}} \
          -CA root-cert.pem \
          -CAkey root-key.pem \
          -CAcreateserial \
          -extensions req_ext \
          -extfile {{.CLUSTER_NAME}}/intermediate.conf \
          -in {{.CLUSTER_NAME}}/cluster-ca.csr -out {{.CLUSTER_NAME}}/ca-cert.pem
      - cmd: |
          cat {{.CLUSTER_NAME}}/ca-cert.pem > {{.CLUSTER_NAME}}/cert-chain.pem
          cp root-cert.pem {{.CLUSTER_NAME}}/

  workload:
    desc: Generate workload certificates for Istio
    dir: "{{.ISTIO_WORKDIR}}"
    cmds:
      - cmd: mkdir -p {{.CLUSTER_NAME}}
      - cmd: |
          cat <<EOF > {{.CLUSTER_NAME}}/workload.conf
          [ req ]
          encrypt_key = no
          prompt = no
          utf8 = yes
          default_md = sha256
          default_bits = {{.ISTIO_INTERMEDIATE_KEYSZ}}
          req_extensions = req_ext
          x509_extensions = req_ext
          distinguished_name = req_dn

          [ req_ext ]
          subjectKeyIdentifier = hash
          basicConstraints = critical, CA:false
          keyUsage = digitalSignature, keyEncipherment
          extendedKeyUsage = serverAuth, clientAuth
          subjectAltName=@san

          [ san ]
          URI.1 = spiffe://cluster.local/ns/${{.CLUSTER_NAME}}sa/{{.ISTIO_SERVICE_ACCOUNT}}

          [ req_dn ]
          O = {{.ISTIO_INTERMEDIATE_ORG}}
          CN = {{.ISTIO_WORKLOAD_CN}}
          L = {{.CLUSTER_NAME}}
          EOF
      - cmd: mkdir -p {{.CLUSTER_NAME}}
      - cmd: |
          openssl genrsa -out {{.CLUSTER_NAME}}/key.pem 4096
      - cmd: |
          openssl req -sha256 -new \
          -key {{.CLUSTER_NAME}}/ca-key.pem \
          -config {{.CLUSTER_NAME}}/workload.conf \
          -out {{.CLUSTER_NAME}}/workload.csr
      - cmd: |
          openssl x509 -req -sha256 \
          -days {{.ISTIO_WORKLOAD_DAYS}} \
          -CA {{.CLUSTER_NAME}}/ca-cert.pem \
          -CAkey {{.CLUSTER_NAME}}/ca-key.pem \
          -CAcreateserial \
          -extensions req_ext \
          -extfile {{.CLUSTER_NAME}}/workload.conf \
          -in {{.CLUSTER_NAME}}/workload.csr -out {{.CLUSTER_NAME}}/workload-cert.pem
      - cmd: |
          cat {{.CLUSTER_NAME}}/ca-cert.pem > {{.CLUSTER_NAME}}/cert-chain.pem
          cp root-cert.pem {{.CLUSTER_NAME}}/

  namespace:
    desc: Create Istio default namespace
    cmds:
      - cmd: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Namespace
          metadata:
            name: istio-system
          EOF
  
  install:istioctl:
    desc: Install Istio control CLI
    cmds:
      - cmd: |
          curl -fsSL https://github.com/istio/istio/releases/download/{{.ISTIO_VERSION}}/istioctl-{{.ISTIO_VERSION}}-linux-amd64.tar.gz \
          | tar xvzf - --strip-component=1 --directory=~/.local/{{.ISTIO_VERSION}} \
          && ln -sf ~/.local/{{.ISTIO_VERSION}}/istioctl ~/.local/bin/istioctl
    status:
      - test -f ~/.local/bin/istioctl
      - istioctl version

  deploy:k3s:
    desc: Install Istio
    summary: >
      Install Istio on K3S (see: https://istio.io/latest/docs/ambient/install/platform-prerequisites/#k3s)
    vars:
      VERSION: "{{.ISTIO_VERSION}}"
      PLATFORM: k3s
    cmds:
      - task: root-ca-cert
      - task: intermediate-ca-cert
      - task: namespace
      - cmd: mkdir -p {{.ISTIO_WORKDIR}}
      - cmd: |
          cat <<EOF > {{.ISTIO_WORKDIR}}/install-istio-config.yaml
          apiVersion: install.istio.io/v1alpha1
          kind: IstioOperator
          spec:
            profile: ambient
            components:
              ingressGateways:
                - name: istio-ingressgateway
                  k8s:
                    serviceAnnotations:
                      metallb.universe.tf/allow-shared-ip: edge-endpoint
          EOF
      - cmd: |
          istioctl install --verify --skip-confirmation \
          --set values.global.platform={{.PLATFORM}} \
          -f {{.ISTIO_WORKDIR}}/install-istio-config.yaml
