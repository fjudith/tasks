version: 3

tasks:
  rootca:
    desc: Generate root CA for Istio
    vars:
      ROOTCA_DAYS: 3650
      ROOTCA_KEYSZ: 4096
      ROOTCA_ORG: Istio
      ROOTCA_CN: Root CA
      KUBECONFIG: ~/.kube/config
      ISTIO_NAMESPACE: istio-system
    dir: .bin/
    cmds:
      - cmd: |
          cat <<EOF > root-ca.conf
          [ req ]
          encrypt_key = no
          prompt = no
          utf8 = yes
          default_md = sha256
          default_bits = {{.ROOTCA_KEYSZ}}
          req_extensions = req_ext
          x509_extensions = req_ext
          distinguished_name = req_dn

          [ req_ext ]
          subjectKeyIdentifier = hash
          basicConstraints = critical, CA:true
          keyUsage = critical, digitalSignature, nonRepudiation, keyEncipherment, keyCertSign

          [ req_dn ]
          O = {{.ROOTCA_ORG}}
          CN = {{.ROOTCA_CN}}
          EOF
      - cmd: |
          openssl genrsa -out root-key.pem 4096
      - cmd: |
          openssl req -sha256 -new \
          -key root-key.pem \
          -config root-ca.conf -out root-cert.csr
      - cmd: |
          openssl x509 -req -sha256 \
          -days {{.ROOTCA_DAYS}} \
          -signkey root-key.pem \
          -extensions req_ext \
          -extfile root-ca.conf \
          -in root-cert.csr \
          -out root-cert.pem

  intermediate:
    desc: Generate intermediate CA for Istio
    vars:
      CLUSTER_NAME: cluster0
      INTERMEDIATE_DAYS: 3650
      INTERMEDIATE_KEYSZ: 4096
      INTERMEDIATE_ORG: Istio
      INTERMEDIATE_CN: Intermediate CA
      INTERMEDIATE_SAN_DNS: istiod.istio-system.svc
    dir: .bin/
    cmds:
      - cmd: mkdir -p {{.CLUSTER_NAME}}
      - cmd: |
          cat <<EOF > {{.CLUSTER_NAME}}/intermediate.conf
          [ req ]
          encrypt_key = no
          prompt = no
          utf8 = yes
          default_md = sha256
          default_bits = {{.INTERMEDIATE_KEYSZ}}
          req_extensions = req_ext
          x509_extensions = req_ext
          distinguished_name = req_dn

          [ req_ext ]
          subjectKeyIdentifier = hash
          basicConstraints = critical, CA:true, pathlen:0
          keyUsage = critical, digitalSignature, nonRepudiation, keyEncipherment, keyCertSign
          subjectAltName=@san

          [ san ]
          DNS.1 = {{.INTERMEDIATE_SAN_DNS}}

          [ req_dn ]
          O = {{.INTERMEDIATE_ORG}}
          CN = {{.INTERMEDIATE_CN}}
          L = {{.CLUSTER_NAME}}
          EOF
      - cmd: mkdir -p {{.CLUSTER_NAME}}
      - cmd: |
          openssl genrsa -out {{.CLUSTER_NAME}}/ca-key.pem 4096
      - cmd: |
          openssl req -sha256 -new \
          -key {{.CLUSTER_NAME}}/ca-key.pem \
          -config {{.CLUSTER_NAME}}/intermediate.conf \
          -out {{.CLUSTER_NAME}}/cluster-ca.csr
      - cmd: |
          openssl x509 -req -sha256 \
          -days {{.INTERMEDIATE_DAYS}} \
          -CA root-cert.pem \
          -CAkey root-key.pem \
          -CAcreateserial \
          -extensions req_ext \
          -extfile {{.CLUSTER_NAME}}/intermediate.conf \
          -in {{.CLUSTER_NAME}}/cluster-ca.csr -out {{.CLUSTER_NAME}}/ca-cert.pem
      - cmd: |
          cat {{.CLUSTER_NAME}}/ca-cert.pem > {{.CLUSTER_NAME}}/cert-chain.pem
          cp root-cert.pem {{.CLUSTER_NAME}}/

  workload:
    desc: Generate workload certificates for Istio
    vars:
      CLUSTER_NAME: cluster0
      INTERMEDIATE_KEYSZ: 4096
      INTERMEDIATE_ORG: Istio
      WORKLOAD_DAYS: 1
      SERVICE_ACCOUNT: default
      WORKLOAD_CN: Workload
    dir: .bin/
    cmds:
      - cmd: mkdir -p {{.CLUSTER_NAME}}
      - cmd: |
          cat <<EOF > {{.CLUSTER_NAME}}/workload.conf
          [ req ]
          encrypt_key = no
          prompt = no
          utf8 = yes
          default_md = sha256
          default_bits = {{.INTERMEDIATE_KEYSZ}}
          req_extensions = req_ext
          x509_extensions = req_ext
          distinguished_name = req_dn

          [ req_ext ]
          subjectKeyIdentifier = hash
          basicConstraints = critical, CA:false
          keyUsage = digitalSignature, keyEncipherment
          extendedKeyUsage = serverAuth, clientAuth
          subjectAltName=@san

          [ san ]
          URI.1 = spiffe://cluster.local/ns/${{.CLUSTER_NAME}}sa/{{.SERVICE_ACCOUNT}}

          [ req_dn ]
          O = {{.INTERMEDIATE_ORG}}
          CN = {{.WORKLOAD_CN}}
          L = {{.CLUSTER_NAME}}
          EOF
      - cmd: mkdir -p {{.CLUSTER_NAME}}
      - cmd: |
          openssl genrsa -out {{.CLUSTER_NAME}}/key.pem 4096
      - cmd: |
          openssl req -sha256 -new \
          -key {{.CLUSTER_NAME}}/ca-key.pem \
          -config {{.CLUSTER_NAME}}/workload.conf \
          -out {{.CLUSTER_NAME}}/workload.csr
      - cmd: |
          openssl x509 -req -sha256 \
          -days {{.WORKLOAD_DAYS}} \
          -CA {{.CLUSTER_NAME}}/ca-cert.pem \
          -CAkey {{.CLUSTER_NAME}}/ca-key.pem \
          -CAcreateserial \
          -extensions req_ext \
          -extfile {{.CLUSTER_NAME}}/workload.conf \
          -in {{.CLUSTER_NAME}}/workload.csr -out {{.CLUSTER_NAME}}/workload-cert.pem
      - cmd: |
          cat {{.CLUSTER_NAME}}/ca-cert.pem > {{.CLUSTER_NAME}}/cert-chain.pem
          cp root-cert.pem {{.CLUSTER_NAME}}/
