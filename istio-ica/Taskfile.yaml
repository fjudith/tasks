# https://taskfile.dev

version: 3

include: https://github.com/fjudith/tasks.git//istio/Taskfile.yaml?ref=main

env:
  CLUSTER_NAME: default
  # KUBECONFIG: ~/.kube/config
  ISTIO_WORKDIR: /tmp
  ISTIO_VERSION: 1.26.2
  ISTIO_NAMESPACE: istio-system
  ISTIO_ROOTCA_DAYS: 3650
  ISTIO_ROOTCA_KEYSZ: 4096
  ISTIO_ROOTCA_ORG: Istio
  ISTIO_ROOTCA_CN: Root CA
  ISTIO_INTERMEDIATE_DAYS: 3650
  ISTIO_INTERMEDIATE_KEYSZ: 4096
  ISTIO_INTERMEDIATE_ORG: Istio
  ISTIO_INTERMEDIATE_CN: Intermediate CA
  ISTIO_INTERMEDIATE_SAN_DNS: istiod.istio-system.svc
  ISTIO_WORKLOAD_DAYS: 1
  ISTIO_SERVICE_ACCOUNT: default
  ISTIO_WORKLOAD_CN: Workload

tasks:
  lfs245:lab2-1:k3s:
    desc: Istio Service Mesh Essentials (Lab 2.1)
    summary: >
      Deploy Istio minimal profile with a complementary Ingress Gateway and sample a example workfload
      Install Istio on K3S (see: https://istio.io/latest/docs/ambient/install/platform-prerequisites/#k3s)
    vars:
      VERSION: "{{.ISTIO_VERSION}}"
      PLATFORM: k3s
    cmds:
      - task: install:istioctl
      - task: deploy:certs
      - cmd: mkdir -p {{.ISTIO_WORKDIR}}
      - cmd: |
          cat <<EOF > {{.ISTIO_WORKDIR}}/install-istio-config.yaml
          apiVersion: install.istio.io/v1alpha1
          kind: IstioOperator
          metadata:
            name: control-plane
          spec:
            profile: minimal
            meshConfig:
              outboundTrafficPolicy:
                mode: REGISTRY_ONLY
              trustDomain: acmellc.local
          EOF
      - cmd: >
          istioctl install --verify --skip-confirmation
          --set values.global.platform="{{.PLATFORM}}"
          --filename="{{.ISTIO_WORKDIR}}/install-istio-config.yaml"
          --namespace="istio-system"
          --revision="prod"
      - cmd: kubectl label namespace default istio.io/rev=prod
      - cmd: kubectl apply -f https://raw.githubusercontent.com/istio/istio/master/samples/httpbin/httpbin.yaml
      - cmd: |
          cat <<EOF > {{.ISTIO_WORKDIR}}/global-ingress.yaml
          apiVersion: install.istio.io/v1alpha1
          kind: IstioOperator
          metadata:
            name: global-ingress
          spec:
            profile: empty
            components:
              ingressGateways:
                - name: global-ingress
                  enabled: true
                  namespace: istio-system
                  label:
                    ingress: global
          EOF
      - cmd: >
          istioctl install --skip-confirmation
          --filename="{{.ISTIO_WORKDIR}}/global-ingress.yaml"
          --revision="prod"
  
  lfs245:lab2-1:test:
    desc: Check Istio minimal deployment in k3s
    dir: "{{.ISTIO_WORKDIR}}"
    cmds:
      - cmd: |
          istioctl proxy-config -n default secret deployment/httpbin -o json \
          | jq -r '.dynamicActiveSecrets[0].secret.tlsCertificate.certificateChain.inlineBytes' \
          | base64 --decode > chain.pem
      - cmd: |
          openssl x509 -noout -text -in chain.pem \
          grep -niE '{{.CLUSTER_NAME}}|acmellc\.local|'

  lfs245:lab3-1:k3s:
    desc: //TODO
    summary: //TODO
    dir: "{{.ISTIO_WORKDIR}}"
    vars:
      VERSION: "{{.ISTIO_VERSION}}"
      PLATFORM: k3s
    cmds:
      - task: install:istioctl
      - task: deploy:certs
      - cmd: mkdir -p {{.ISTIO_WORKDIR}}
      - cmd: |
          cat <<EOF > {{.ISTIO_WORKDIR}}/install-istio-config.yaml
          apiVersion: install.istio.io/v1alpha1
          kind: IstioOperator
          spec:
            profile: demo
            components:
              ingressGateways:
                - name: istio-ingressgateway
                  k8s:
                    serviceAnnotations:
                      metallb.universe.tf/allow-shared-ip: edge-endpoint
          EOF
      - cmd: |
          istioctl install --verify --skip-confirmation \
          --set values.global.platform={{.PLATFORM}} \
          -f {{.ISTIO_WORKDIR}}/install-istio-config.yaml
